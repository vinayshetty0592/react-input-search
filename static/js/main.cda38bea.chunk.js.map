{"version":3,"sources":["components/react-input-search/index.js","App.js","reportWebVitals.js","index.js"],"names":["ReactInputSearch","props","useState","userInput","setUserInput","filteredOptions","setFilteredOptions","showOptions","setShowOptions","activeItem","setActiveItem","searchResultsNode","useRef","useEffect","handleMouseClick","event","current","contains","target","document","addEventListener","removeEventListener","onChangeHandler","e","value","searchHandler","results","length","options","filter","item","includes","key","search","onListItemHover","status","className","type","name","placeholder","onFocus","onChange","onKeyDown","autoComplete","ref","map","onClick","onItemClickHandler","onMouseEnter","onMouseLeave","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAgHeA,G,MA7GU,SAACC,GAAW,IAAD,EACAC,mBAAS,IADT,mBAC3BC,EAD2B,KAChBC,EADgB,OAEYF,mBAAS,IAFrB,mBAE3BG,EAF2B,KAEVC,EAFU,OAGIJ,oBAAS,GAHb,mBAG3BK,EAH2B,KAGdC,EAHc,OAIEN,oBAAU,GAJZ,mBAI3BO,EAJ2B,KAIfC,EAJe,KAM5BC,EAAoBC,mBAE1BC,qBAAU,WACR,IAAMC,EAAmB,SAACC,GACpBJ,EAAkBK,UAAYL,EAAkBK,QAAQC,SAASF,EAAMG,UACzER,GAAe,GACfF,GAAe,KAInB,OADAW,SAASC,iBAAiB,YAAaN,GAChC,WACLK,SAASE,oBAAoB,YAAaP,MAE3C,IAEH,IAqBMQ,EAAkB,SAACC,GACvBnB,EAAamB,EAAEL,OAAOM,OACtBC,EAAcF,EAAEL,OAAOM,QAanBC,EAAgB,SAACD,GACrBlB,EAAmB,IACnB,IAAMoB,EAZO,SAACF,GACd,OAAIA,EAAMG,OACD1B,EAAM2B,QAAQC,QACnB,SAACC,GAAD,OAAUA,EAAKN,MAAMO,SAASP,IAAUM,EAAKE,IAAID,SAASP,MAGrD,GAMOS,CAAOT,GACvBlB,EAAmBoB,GACnBlB,GAAe,IAQX0B,EAAkB,SAACF,EAAKG,GAC5BzB,GAAe,GACXyB,GACFzB,EAAcsB,IAIlB,OACE,sBAAKI,UAAU,YAAf,UACE,uBACEA,UAAU,QACVC,KAAK,OACLC,KAAK,SACLC,YAAY,aACZf,MAAOrB,EACPqC,QAASlB,EACTmB,SAAUnB,EACVoB,UAjEoB,SAAC3B,GACzB,OAAQA,EAAMiB,KACZ,IAAK,YACCvB,EAAcJ,EAAgBsB,OAAS,GACzCjB,EAAcD,EAAa,GAE7B,MACF,IAAK,UACCA,EAAa,GACfC,EAAcD,EAAa,GAE7B,MACF,IAAK,QACHD,GAAe,GACfJ,EAAaC,EAAgBI,GAAYe,SAoDzCmB,aAAa,QAEdtC,EAAgBsB,OAAS,GAAKpB,GAC7B,oBAAI6B,UAAU,gBAAgBQ,IAAKjC,EAAnC,SACGN,EAAgBwC,KAAI,SAACf,EAAME,GAAP,OACnB,oBAEEc,QAAS,kBA9BM,SAAChB,GAC1BtB,GAAe,GACfJ,EAAa0B,EAAKN,OA4BOuB,CAAmBjB,IAClCM,UAAS,UAAK3B,IAAeuB,GAAO,UACpCgB,aAAc,kBAAMd,EAAgBF,GAAK,IACzCiB,aAAc,kBAAMf,EAAgBF,GAAK,IAL3C,SAOGF,EAAKN,OANDQ,aCjFJkB,MAbf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,CACER,QAAS,CACP,CAAEI,IAAK,QAASR,MAAO,SACvB,CAAEQ,IAAK,OAAQR,MAAO,QACtB,CAAEQ,IAAK,MAAOR,MAAO,aCGhB2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3C,SAAS4C,eAAe,SAM1BZ,M","file":"static/js/main.cda38bea.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './styles.css';\n\nconst ReactInputSearch = (props) => {\n  const [userInput, setUserInput] = useState('');\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const [showOptions, setShowOptions] = useState(false);\n  const [activeItem, setActiveItem] = useState(-1);\n\n  const searchResultsNode = useRef();\n\n  useEffect(() => {\n    const handleMouseClick = (event) => {\n      if (searchResultsNode.current && !searchResultsNode.current.contains(event.target)) {\n        setActiveItem(-1);\n        setShowOptions(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleMouseClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleMouseClick);\n    };\n  }, []);\n\n  const onKeyDownHandler = ((event) => {\n    switch (event.key) {\n      case 'ArrowDown':\n        if (activeItem < (filteredOptions.length - 1)) {\n          setActiveItem(activeItem + 1);\n        }\n        break;\n      case 'ArrowUp':\n        if (activeItem > 0) {\n          setActiveItem(activeItem - 1);\n        }\n        break;\n      case 'Enter':\n        setShowOptions(false);\n        setUserInput(filteredOptions[activeItem].value);\n        break;\n      default:\n        break;\n    }\n  });\n\n  const onChangeHandler = (e) => {\n    setUserInput(e.target.value);\n    searchHandler(e.target.value);\n  };\n\n  const search = (value) => {\n    if (value.length) {\n      return props.options.filter(\n        (item) => item.value.includes(value) || item.key.includes(value)\n      );\n    } else {\n      return [];\n    }\n  };\n\n  const searchHandler = (value) => {\n    setFilteredOptions([]);\n    const results = search(value);\n    setFilteredOptions(results);\n    setShowOptions(true);\n  };\n\n  const onItemClickHandler = (item) => {\n    setShowOptions(false);\n    setUserInput(item.value);\n  };\n\n  const onListItemHover = (key, status) => {\n    setActiveItem(-1);\n    if (status) {\n      setActiveItem(key);\n    }\n  };\n\n  return (\n    <div className='container'>\n      <input\n        className='input'\n        type='text'\n        name='search'\n        placeholder='Enter Text'\n        value={userInput}\n        onFocus={onChangeHandler}\n        onChange={onChangeHandler}\n        onKeyDown={onKeyDownHandler}\n        autoComplete='off'\n      />\n      {filteredOptions.length > 0 && showOptions && (\n        <ul className='searchResults' ref={searchResultsNode}>\n          {filteredOptions.map((item, key) => (\n            <li\n              key={key}\n              onClick={() => onItemClickHandler(item)}\n              className={`${activeItem === key && 'active'}`}\n              onMouseEnter={() => onListItemHover(key, true)}\n              onMouseLeave={() => onListItemHover(key, false)}\n            >\n              {item.value}\n            </li>\n          ))}\n        </ul>\n      )\n      }\n    </div >\n  );\n};\n\nexport default ReactInputSearch;\n","import ReactInputSearch from './components/react-input-search/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReactInputSearch\n        options={[\n          { key: 'apple', value: 'Apple' },\n          { key: 'ball', value: 'Ball' },\n          { key: 'cat', value: 'Cat' },\n        ]} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}